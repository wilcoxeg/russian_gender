filter(skip == 0) %>%
gather(measure, value, 18:26) %>%
mutate(tgt_zero = if_else(measure %in% c("first_duration", "gaze_duration", "go_past_time", "right_bounded_rt", "total_duration") & value == 0, F, T)) %>%
filter(tgt_zero != F) %>%
drop_na() %>%
dplyr::select(-tgt_zero, -cond_id, -skip) %>%
mutate(word_nr = if_else(word_nr > 4, 4, as.double(word_nr))) %>%
rename(region = word_nr) %>%
#mutate(region=factor(region, levels=c("pre-critical", "critical", "post-critical", "end"))) %>%
mutate(type_s = ifelse(type %in% c('stim_adj'), "Modifying_Adj", "Predictive_Adj_Verb"),
type_l = ifelse(type %in% c('stim_verb'), "Verb", "Modifying_Adj_Predictive_Adj")
) %>%
drop_na() %>%
group_by(measure) %>%
mutate(outlier = value > (mean(value) + 3 * sd(value))) %>%
ungroup() %>%
mutate(outlier_discard = if_else(measure %in% c("first_duration", "gaze_duration", "total_duration", "go_past_time", "right_bounded_rt") & outlier == T, F, T)) %>%
filter(outlier_discard == T) %>%
dplyr::select(-outlier_discard) %>%
drop_na()
View(df)
agg_df = df %>%
group_by(type_s, gender_match, region, measure) %>%
summarise(
m = mean(value),
s = std.error(value),
lower = m - 1.96 * s,
upper = m + 1.96 * s
) %>%
ungroup()
agg_df
# Plot the reading times in each region broken down by stimulus type, reading measure and target gender
agg_df %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("gaze_duration", "go_past_time", "total_duration")) %>%
mutate(type_s = factor(type_s, levels = c("Modifying_Adj", "Predictive_Adj_Verb"), labels=c("Modifying Adjective", "Predicative Adj. & Verb"))) %>%
mutate(measure = factor(measure, levels = c("gaze_duration", "go_past_time", "total_duration"), labels=c("Gaze Duration", "Go Past Times", "Total Duration"))) %>%
ggplot(aes(x=region, y=m, color = gender_match)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=lower-100, ymax=upper+100), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_grid(measure~type_s, scales = "free_y") +
#ggtitle(paste0("Region by region plot for ", stim)) +
ylab("Reading time in ms") +
xlab("Word Number") +
#coord_cartesian(ylim=c(0, 900)) +
theme(
legend.position = "bottom"
)
# ggsave(paste0("./images/RT_results_synt_position.pdf"), device="pdf", height=5, width=8)
# ggsave(paste0("./images/RT_results.png"), height=5, width=8)
agg_df2 = df %>%
group_by(type_s, subj_id, region, measure) %>%
summarise(
m = mean(value),
) %>%
ungroup() %>%
group_by(type_s, region, measure) %>%
pivot_wider(
names_from = type_s,
values_from = m,
names_prefix = "mean_"
) %>%
# Calculate the difference between 'Mis' and 'Match'
drop_na() %>%
mutate(
diff = mean_Predictive_Adj_Verb - mean_Modifying_Adj
) %>%
group_by(region, measure) %>%
summarise(
m_diff = mean(diff),
s = std.error(diff),
lower = m_diff - 1.96 * s,
upper = m_diff + 1.96 * s
) %>%
ungroup()
View(agg_df2)
# Plot the reading times in each region broken down by stimulus type, reading measure and target gender
agg_df2 %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("gaze_duration", "go_past_time", "total_duration")) %>%
mutate(measure = factor(measure, levels = c("gaze_duration", "go_past_time", "total_duration"), labels=c("Gaze Duration", "Go Past Times", "Total Duration"))) %>%
ggplot(aes(x=region, y=m_diff, color = measure)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=lower-100, ymax=upper+100), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_wrap(~ measure, scales = "free_y") +
labs(
title = "Difference in RTs: \nexternal (verb or predicative adjective) vs internal agreement (modifying adjective)",
y = "Reading time difference (ms)",
x = "Word Number",
color = "Measure"
) +
#coord_cartesian(ylim=c(0, 900)) +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggsave(paste0("./images/RT_results_main_diff_in_synt.pdf"), device="pdf", height=5, width=8)
# ggsave(paste0("./images/RT_results.png"), height=5, width=8)
agg_df3 = df %>%
group_by(type_s, gender_match, item_id, region, measure) %>%
summarise(
m = mean(value)
) %>%
ungroup() %>%
group_by(type_s, region, measure) %>%
pivot_wider(
names_from = gender_match,
values_from = m,
names_prefix = "mean_"
) %>%
# Calculate the difference between 'Mis' and 'Match'
drop_na() %>%
mutate(
diff = mean_Mis - mean_Match
) %>%
group_by(type_s, region, measure) %>%
summarise(
m_diff = mean(diff),
s = std.error(diff),
lower = m_diff - 1.96 * s,
upper = m_diff + 1.96 * s
) %>%
ungroup()
View(agg_df3)
# Plot the reading times in each region broken down by stimulus type, reading measure and target gender
agg_df3 %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("gaze_duration", "go_past_time", "total_duration")) %>%
mutate(type_s = factor(type_s, levels = c("Modifying_Adj", "Predictive_Adj_Verb"), labels=c("Modifying Adjective", "Predicative Adj. & Verb"))) %>%
mutate(measure = factor(measure, levels = c("gaze_duration", "go_past_time", "total_duration"), labels=c("Gaze Duration", "Go Past Times", "Total Duration"))) %>%
ggplot(aes(x=region, y=m_diff, color = type_s)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=lower-100, ymax=upper+100), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_wrap(~ measure, scales = "free_y") +
#ggtitle(paste0("Region by region plot for ", stim)) +
labs(
title = "Difference in RTs under Mismatch and Match conditions",
y = "Reading time difference (ms)",
x = "Word Number",
color = "Agreement Type"
) +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggsave(paste0("./images/RT_results_interaction_in_synt.pdf"), device="pdf", height=5, width=8)
# ggsave(paste0("./images/RT_results.png"), height=5, width=8)
# Plot the reading times in each region broken down by stimulus type, reading measure and target gender
agg_df %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("gaze_duration", "go_past_time", "total_duration")) %>%
mutate(type_s = factor(type_s, levels = c("Modifying_Adj", "Predictive_Adj_Verb"), labels=c("Modifying Adjective", "Predicative Adj. & Verb"))) %>%
mutate(measure = factor(measure, levels = c("gaze_duration", "go_past_time", "total_duration"), labels=c("Gaze Duration", "Go Past Times", "Total Duration"))) %>%
ggplot(aes(x=region, y=m, color = gender_match)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=lower-100, ymax=upper+100), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_grid(measure~type_s, scales = "free_y") +
#ggtitle(paste0("Region by region plot for ", stim)) +
ylab("Reading time in ms") +
xlab("Word Number") +
#coord_cartesian(ylim=c(0, 900)) +
theme(
legend.position = "bottom"
)
ggsave(paste0("./images/RT_results_synt_position.pdf"), device="pdf", height=5, width=8)
# ggsave(paste0("./images/RT_results.png"), height=5, width=8)
# Plot the reading times in each region broken down by stimulus type, reading measure and target gender
agg_df2 %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("FPReg", "RegIn_incl")) %>%
mutate(measure = factor(measure, levels = c("FPReg", "RegIn_incl"), labels=c("First Pass Regression out Prob.", "Regression in Prob."))) %>%
ggplot(aes(x=region, y=m_diff, color = measure)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=lower-100, ymax=upper+100), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_wrap(~ measure, scales = "free_y") +
labs(
title = "Difference in Regressions: \nexternal (verb or predicative adjective) vs internal agreement (modifying adjective)",
y = "Regression difference (ms)",
x = "Word Number",
color = "Measure"
) +
#coord_cartesian(ylim=c(0, 900)) +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggsave(paste0("./images/Reg_results_main_diff_in_synt.pdf"), device="pdf", height=5, width=8)
# ggsave(paste0("./images/RT_results.png"), height=5, width=8)
View(agg_df2)
# Plot the reading times in each region broken down by stimulus type, reading measure and target gender
agg_df2 %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("FPReg", "RegIn_incl")) %>%
mutate(measure = factor(measure, levels = c("FPReg", "RegIn_incl"), labels=c("First Pass Regression out Prob.", "Regression in Prob."))) %>%
ggplot(aes(x=region, y=m_diff, color = measure)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=lower, ymax=upper), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_wrap(~ measure, scales = "free_y") +
labs(
title = "Difference in Regressions: \nexternal (verb or predicative adjective) vs internal agreement (modifying adjective)",
y = "Regression difference (ms)",
x = "Word Number",
color = "Measure"
) +
#coord_cartesian(ylim=c(0, 900)) +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggsave(paste0("./images/Reg_results_main_diff_in_synt.pdf"), device="pdf", height=5, width=8)
# ggsave(paste0("./images/RT_results.png"), height=5, width=8)
# Plot the reading times in each region broken down by stimulus type, reading measure and target gender
agg_df2 %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("FPReg", "RegIn_incl")) %>%
mutate(measure = factor(measure, levels = c("FPReg", "RegIn_incl"), labels=c("First Pass Regression out Prob.", "Regression in Prob."))) %>%
ggplot(aes(x=region, y=m_diff, color = measure)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=-1, ymax=1), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_wrap(~ measure, scales = "free_y") +
labs(
title = "Difference in Regressions: \nexternal (verb or predicative adjective) vs internal agreement (modifying adjective)",
y = "Regression difference (ms)",
x = "Word Number",
color = "Measure"
) +
#coord_cartesian(ylim=c(0, 900)) +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggsave(paste0("./images/Reg_results_main_diff_in_synt.pdf"), device="pdf", height=5, width=8)
# ggsave(paste0("./images/RT_results.png"), height=5, width=8)
# Plot the reading times in each region broken down by stimulus type, reading measure and target gender
agg_df2 %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("FPReg", "RegIn_incl")) %>%
mutate(measure = factor(measure, levels = c("FPReg", "RegIn_incl"), labels=c("First Pass Regression out Prob.", "Regression in Prob."))) %>%
ggplot(aes(x=region, y=m_diff, color = measure)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=-0.25, ymax=0.25), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_wrap(~ measure, scales = "free_y") +
labs(
title = "Difference in Regressions: \nexternal (verb or predicative adjective) vs internal agreement (modifying adjective)",
y = "Regression difference (ms)",
x = "Word Number",
color = "Measure"
) +
#coord_cartesian(ylim=c(0, 900)) +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggsave(paste0("./images/Reg_results_main_diff_in_synt.pdf"), device="pdf", height=5, width=8)
# ggsave(paste0("./images/RT_results.png"), height=5, width=8)
# Plot the reading times in each region broken down by stimulus type, reading measure and target gender
agg_df2 %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("FPReg", "RegIn_incl")) %>%
mutate(measure = factor(measure, levels = c("FPReg", "RegIn_incl"), labels=c("First Pass Regression out Prob.", "Regression in Prob."))) %>%
ggplot(aes(x=region, y=m_diff, color = measure)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=-0.2, ymax=0.2), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_wrap(~ measure, scales = "free_y") +
labs(
title = "Difference in Regressions: \nexternal (verb or predicative adjective) vs internal agreement (modifying adjective)",
y = "Regression difference (ms)",
x = "Word Number",
color = "Measure"
) +
#coord_cartesian(ylim=c(0, 900)) +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggsave(paste0("./images/Reg_results_main_diff_in_synt.pdf"), device="pdf", height=5, width=8)
# ggsave(paste0("./images/RT_results.png"), height=5, width=8)
agg_df3 %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("gaze_duration", "go_past_time", "total_duration")) %>%
mutate(type_s = factor(type_s, levels = c("Modifying_Adj", "Predictive_Adj_Verb"), labels=c("Modifying Adjective", "Predicative Adj. & Verb"))) %>%
mutate(measure = factor(measure, levels = c("FPReg", "RegIn_incl"), labels=c("First Pass Regression out Prob.", "Regression in Prob."))) %>%
ggplot(aes(x=region, y=m_diff, color = type_s)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=0.25, ymax=0.25), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_wrap(~ measure, scales = "free_y") +
#ggtitle(paste0("Region by region plot for ", stim)) +
labs(
title = "Difference in RTs under Mismatch and Match conditions",
y = "Reading time difference (ms)",
x = "Word Number",
color = "Agreement Type"
) +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggsave(paste0("./images/RT_results_interaction_in_synt.pdf"), device="pdf", height=5, width=8)
# Plot the reading times in each region broken down by stimulus type, reading measure and target gender
agg_df3 %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("gaze_duration", "go_past_time", "total_duration")) %>%
mutate(type_s = factor(type_s, levels = c("Modifying_Adj", "Predictive_Adj_Verb"), labels=c("Modifying Adjective", "Predicative Adj. & Verb"))) %>%
mutate(measure = factor(measure, levels = c("gaze_duration", "go_past_time", "total_duration"), labels=c("Gaze Duration", "Go Past Times", "Total Duration"))) %>%
ggplot(aes(x=region, y=m_diff, color = type_s)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=lower-100, ymax=upper+100), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_wrap(~ measure, scales = "free_y") +
#ggtitle(paste0("Region by region plot for ", stim)) +
labs(
title = "Difference in RTs under Mismatch and Match conditions",
y = "Reading time difference (ms)",
x = "Word Number",
color = "Agreement Type"
) +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggsave(paste0("./images/RT_results_interaction_in_synt.pdf"), device="pdf", height=5, width=8)
# ggsave(paste0("./images/RT_results.png"), height=5, width=8)
agg_df3 %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("FPReg", "RegIn_incl")) %>%
mutate(type_s = factor(type_s, levels = c("Modifying_Adj", "Predictive_Adj_Verb"), labels=c("Modifying Adjective", "Predicative Adj. & Verb"))) %>%
mutate(measure = factor(measure, levels = c("FPReg", "RegIn_incl"), labels=c("First Pass Regression out Prob.", "Regression in Prob."))) %>%
ggplot(aes(x=region, y=m_diff, color = type_s)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=0.25, ymax=0.25), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_wrap(~ measure, scales = "free_y") +
#ggtitle(paste0("Region by region plot for ", stim)) +
labs(
title = "Difference in RTs under Mismatch and Match conditions",
y = "Reading time difference (ms)",
x = "Word Number",
color = "Agreement Type"
) +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggsave(paste0("./images/RT_results_interaction_in_synt.pdf"), device="pdf", height=5, width=8)
agg_df3 %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("FPReg", "RegIn_incl")) %>%
mutate(type_s = factor(type_s, levels = c("Modifying_Adj", "Predictive_Adj_Verb"), labels=c("Modifying Adjective", "Predicative Adj. & Verb"))) %>%
mutate(measure = factor(measure, levels = c("FPReg", "RegIn_incl"), labels=c("First Pass Regression out Prob.", "Regression in Prob."))) %>%
ggplot(aes(x=region, y=m_diff, color = type_s)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=0.5, ymax=0.5), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_wrap(~ measure, scales = "free_y") +
#ggtitle(paste0("Region by region plot for ", stim)) +
labs(
title = "Difference in RTs under Mismatch and Match conditions",
y = "Reading time difference (ms)",
x = "Word Number",
color = "Agreement Type"
) +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggsave(paste0("./images/RT_results_interaction_in_synt.pdf"), device="pdf", height=5, width=8)
agg_df3 %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("FPReg", "RegIn_incl")) %>%
mutate(type_s = factor(type_s, levels = c("Modifying_Adj", "Predictive_Adj_Verb"), labels=c("Modifying Adjective", "Predicative Adj. & Verb"))) %>%
mutate(measure = factor(measure, levels = c("FPReg", "RegIn_incl"), labels=c("First Pass Regression out Prob.", "Regression in Prob."))) %>%
ggplot(aes(x=region, y=m_diff, color = type_s)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=-0.5, ymax=0.5), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_wrap(~ measure, scales = "free_y") +
#ggtitle(paste0("Region by region plot for ", stim)) +
labs(
title = "Difference in RTs under Mismatch and Match conditions",
y = "Reading time difference (ms)",
x = "Word Number",
color = "Agreement Type"
) +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggsave(paste0("./images/RT_results_interaction_in_synt.pdf"), device="pdf", height=5, width=8)
agg_df3 %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("FPReg", "RegIn_incl")) %>%
mutate(type_s = factor(type_s, levels = c("Modifying_Adj", "Predictive_Adj_Verb"), labels=c("Modifying Adjective", "Predicative Adj. & Verb"))) %>%
mutate(measure = factor(measure, levels = c("FPReg", "RegIn_incl"), labels=c("First Pass Regression out Prob.", "Regression in Prob."))) %>%
ggplot(aes(x=region, y=m_diff, color = type_s)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=-0.3, ymax=0.3), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_wrap(~ measure, scales = "free_y") +
#ggtitle(paste0("Region by region plot for ", stim)) +
labs(
title = "Difference in RTs under Mismatch and Match conditions",
y = "Reading time difference (ms)",
x = "Word Number",
color = "Agreement Type"
) +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggsave(paste0("./images/Regression_results_interaction_in_synt.pdf"), device="pdf", height=5, width=8)
# Plot the reading times in each region broken down by stimulus type, reading measure and target gender
agg_df3 %>%
# filter(type_s %in% c("stim_adj", "stim_verb", "stim_pred_adj")) %>%
filter(measure %in% c("gaze_duration", "go_past_time", "total_duration")) %>%
mutate(type_s = factor(type_s, levels = c("Modifying_Adj", "Predictive_Adj_Verb"), labels=c("Modifying Adjective", "Predicative Adj. & Verb"))) %>%
mutate(measure = factor(measure, levels = c("gaze_duration", "go_past_time", "total_duration"), labels=c("Gaze Duration", "Go Past Times", "Total Duration"))) %>%
ggplot(aes(x=region, y=m_diff, color = type_s)) +
geom_rect(aes(xmin=2.5, xmax=3.5, ymin=lower-100, ymax=upper+100), color = NA, fill = "green", alpha=0.01) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.2) +
geom_line() +
facet_wrap(~ measure, scales = "free_y") +
#ggtitle(paste0("Region by region plot for ", stim)) +
labs(
title = "Difference in RTs under Mismatch and Match conditions",
y = "Reading time difference (ms)",
x = "Word Number",
color = "Agreement Type"
) +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggsave(paste0("./images/RT_results_interaction_in_synt.pdf"), device="pdf", height=5, width=8)
# ggsave(paste0("./images/RT_results.png"), height=5, width=8)
shhh <- suppressPackageStartupMessages # It's a library, so shhh!
shhh(library( mgcv ))
shhh(library(dplyr))
shhh(library(ggplot2))
shhh(library(lme4))
shhh(library(tidymv))
shhh(library(gamlss))
shhh(library(gsubfn))
shhh(library(lmerTest))
shhh(library(tidyverse))
shhh(library(boot))
shhh(library(rsample))
shhh(library(plotrix))
shhh(library(ggrepel))
shhh(library(mgcv))
shhh(library(brms))
shhh(library(bayesplot))
shhh(library(tidyr))
shhh(library(car))
shhh(library(coda))
shhh(library(gridExtra))
shhh(library(posterior))
theme_set(theme_bw())
options(digits=4)
options(scipen=999)
set.seed(444)
# The path to the data
data_path = "./data/"
data_names = list.files(data_path)
# Read in the data from each participant and add to the data frame
motr_df = data.frame()
for(name in data_names){
subj = gsub("reader_", "", gsub("_reading_measures.csv", "", name))
temp_df = read.csv(paste0(data_path, "/", name)) %>% mutate(subj_id = subj)
motr_df = rbind(motr_df, temp_df)
}
# Turn the data into a tidy dataframe and clean the data
clean_df = motr_df %>%
gather(measure, value, 17:23) %>%
mutate(tgt_zero = if_else(measure %in% c("first_duration", "gaze_duration", "go_past_time", "right_bounded_rt", "total_duration") & value == 0, F, T)) %>%
filter(tgt_zero != F) %>%
dplyr::select(-tgt_zero)
motr_df
# Run a lmer model with a three-way interaction between gender matching, stimulus type and gender of noun
model = clean_df %>% filter(word_nr == 3) %>%
filter(measure == "go_past_time") %>%
filter(type %in% c("stim_adj", "stim_pred_adj", "stim_verb")) %>%
mutate(gender_match = if_else(gender_match == "Mis", 1, -1),
target_gender = if_else(target_gender == "M", 1, -1),
item_id = as.factor(item_id)) %>%
lmer(value ~ gender_match * type * target_gender + (1 | item_id ) + (1 | subj_id ), data = ., REML=F)
summary(model)
